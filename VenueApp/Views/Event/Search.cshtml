@model VenueApp.ViewModels.SearchEventViewModel

@{
    ViewBag.Title = "Search Events";

    @using Microsoft.AspNetCore.Http
    @using System.Globalization
    @inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

    string userType = @HttpContextAccessor.HttpContext.Session.GetString("Type") ?? "";
    int userID = @HttpContextAccessor.HttpContext.Session.GetInt32("UserID") ?? 0;

    int count = 1;


}

<h1>@ViewBag.Title</h1>


@if (ViewBag.Message.Length > 0)
{
    <p class="text-success">@ViewBag.Message<span class="glyphicon glyphicon-ok " aria-hidden="true"></span></p>
}
else if (ViewBag.ErrorMessage.Length > 0)
{
    <p class="text-danger">@ViewBag.ErrorMessage <span class="glyphicon glyphicon-remove " aria-hidden="true"></span></p>
}


    <form asp-controller="Event" asp-action="Results" method="post">
        <div class="container">

            <div class="row">
                <div class="form-group col-md-5">
                    <label asp-for="Location"></label>
                    <select class="form-control" asp-for="Location" name="Location"
                            onchange="if(this.options[this.selectedIndex].value=='customOption'){
                        toggleField(this,this.nextSibling);
                        this.selectedIndex='0';
                    }">
                        <option value="all">All</option>
                        <option value="Miami">Miami</option>
                        <option value="Sunrise">Sunrise</option>
                        <option value="Lauderdale">Ft. Lauderdale</option>
                        <option value="Chicago">Chicago</option>
                        <option value="Vegas">Las Vegas</option>
                        <option value="Angeles">Los Angeles</option>
                        <option value="York">New York</option>
                        <option value="customOption">[type a custom value]</option>
                    </select><input name="Location" class="form-control " style="display:none;" disabled="disabled"
                                    onblur="if(this.value==''){toggleField(this,this.previousSibling);}">

                </div>
                <div class="form-group col-md-3">
                    <label asp-for="CategoryID"></label>
                    <select class="form-control " asp-for="CategoryID" asp-items="@Model.Categories"> </select>
                    <input type="hidden" asp-for="Categories" value="@Model.Categories" />
                </div>
                <div class="form-group col-md-2">
                    <label asp-for="FromDate"></label>
                    <input type="date" id="fromDate" class="form-control " style="line-height: 1" asp-for="FromDate" />
                </div>
                <div class="form-group col-md-2">
                    <label asp-for="ToDate"></label>
                    <input type="date" id="toDate" class="form-control " style="line-height: 1" asp-for="ToDate" />
                </div>

            </div>
            <div class="row">
                <div class="form-group col-md-10">
                    <p>
                        <label asp-for="Value"></label>
                        <input class="form-control" asp-for="Value" value="" />
                    </p>
                </div>
                <div class="form-group col-md-2">
                    <label> Query </label>
                    <input type="submit" class="form-control btn btn-primary" value="Go Search" />
                </div>
            </div>
        </div>
    </form>


    @if (Model.Events != null)
    {
        <h3>Search Result</h3>
        @if (Model.Events.Count == 0)
        {
            <p>There are no events that match the search criteria</p>
        }
        else
        {
            <table class="table table-striped" >
                <tr>
                    <th class="col-md-1">#</th>
                    <th class="col-md-5">Name</th>
                    <th class="col-md-2 text-center">Category</th>
                    <th class="col-md-2 text-center">Date</th>
                    <th class="col-md-1 text-center">Time</th>
                    <th class="col-md-1 text-center">Book it</th>
                </tr>
                @foreach (var evento in Model.Events)
                {
                <tr>
                    <td>@count</td>
                    <td><a asp-controller="Event" asp-action="Brochure" asp-route-eventId="@evento.ID">@evento.Name</a></td>
                    <td class="text-center">@evento.Category.Name</td>
                    <td class="text-center">@evento.Date.ToString("ddd d MMM yyyy", CultureInfo.CreateSpecificCulture("en-US"))</td>
                    <td class="text-center">@evento.Date.ToString("hh:mm tt", CultureInfo.CreateSpecificCulture("en-US"))</td>
                    @if (userType.Length > 0)
                    {
                        <td class="text-center"><a class="book" asp-controller="Booking" asp-action="AddFromSearch" method="post" asp-route-userID="@userID" asp-route-eventId="@evento.ID"><span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span></a></td>
                    }
                    else
                    {
                        <td class="text-center"><a class="book" onclick="notAvailable();"><span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span></a></td>
                    }
                </tr>
                    count += 1;
                }
            </table>
        }
    }
    else
    {
        <p>You need to create a criteria</p>
    }


<script type="text/javascript">
    function toggleField(hideObj, showObj) {
        hideObj.disabled = true;
        hideObj.style.display = 'none';
        showObj.disabled = false;
        showObj.style.display = 'inline';
        showObj.focus();
    }

    function notAvailable() {
        alert("Please Log in first to access all functionalities");
    }
</script>
